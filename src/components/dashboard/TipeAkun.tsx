import { Role } from "@prisma/client";
import { useSession } from "next-auth/react";
import { useRouter } from "next/router";
import { MouseEvent, type Dispatch, type SetStateAction } from "react";

export default function TipeAkun({
  roles,
  setRoles,
}: {
  roles: Role;
  setRoles: Dispatch<SetStateAction<Role>>;
}) {
  const types: Role[] = ["USER", "MERCHANT", "MITRA"];
  const roleIndo = ["pembeli", "penjual", "pengemudi"];
  const router = useRouter();

  const { data: dataUser } = useSession();

  const handleClick = async (
    e: MouseEvent<HTMLDivElement, globalThis.MouseEvent>,
    i: number
  ) => {
    e.preventDefault();

    if (dataUser?.user.roles.includes(types[i] as Role)) {
      setRoles(() => types[i] as Role);
    } else {
      await router.push(
        `/auth/signup/${(types[i] as Role) == "MERCHANT" ? "seller" : "driver"}`
      );
    }
  };

  return (
    <>
      {/* Account Type */}
      <div className={`${roles == "MITRA" ? "px-8" : ""} mt-[2.5vh]`}>
        <span className="font-literata text-[15px] font-medium text-primary-300">
          Tipe Akun
        </span>
        <div className="mt-[1vh] flex justify-between gap-x-2">
          {types.map((_, i: number) => (
            <div
              key={i}
              className={`flex w-1/3 cursor-pointer flex-col justify-between gap-y-1 rounded-md px-2 pb-2 pt-3 duration-500 ${
                roles == types[i] ? "bg-primary-300" : ""
              }`}
              onClick={(e) => void handleClick(e, i)}
            >
              {/* Type Icon */}
              <div className="m-auto flex scale-110">
                {TypeIcon(roles, types, i)}
              </div>
              <div className="mx-auto flex items-center">
                <span
                  className={`mr-1 text-center text-[14px] font-bold capitalize duration-500 ${
                    roles == types[i]
                      ? "text-others-black"
                      : "text-others-white"
                  }`}
                >
                  {roleIndo[i]}
                </span>
                {/* Check Icon */}
                {console.log(dataUser?.user.roles)}
                {console.log(types[i])}
                {dataUser?.user.roles.includes(types[i] as Role) ? (
                  <svg
                    width="12"
                    height="12"
                    viewBox="0 0 12 12"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M5.25 0.25C4.21165 0.25 3.19662 0.557907 2.33326 1.13478C1.4699 1.71166 0.796995 2.5316 0.399635 3.49091C0.00227474 4.45022 -0.101693 5.50582 0.10088 6.52422C0.303452 7.54262 0.803466 8.47808 1.53769 9.21231C2.27192 9.94654 3.20738 10.4466 4.22578 10.6491C5.24418 10.8517 6.29978 10.7477 7.25909 10.3504C8.2184 9.95301 9.03834 9.2801 9.61522 8.41674C10.1921 7.55339 10.5 6.53835 10.5 5.5C10.5 4.10761 9.94688 2.77226 8.96231 1.78769C7.97775 0.803123 6.64239 0.25 5.25 0.25ZM4.5 7.59625L2.625 5.72125L3.22125 5.125L4.5 6.40375L7.27875 3.625L7.87725 4.21975L4.5 7.59625Z"
                      fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
                      className="duration-500"
                    />
                  </svg>
                ) : (
                  <svg
                    width="12"
                    height="12"
                    viewBox="0 0 12 12"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M5.75 11a5.25 5.25 0 100-10.5 5.25 5.25 0 000 10.5zm.491-8.15h-1.04c.06 2.372.122 4.146.122 4.146v.009h.787l.008-.009c.04-1.597.072-2.564.096-3.268l.027-.878zm-.098 5.18a.52.52 0 00-.418-.213c-.137 0-.26.05-.37.148a.505.505 0 00-.155.352v.033a.525.525 0 00.221.402.471.471 0 00.271.098h.057a.868.868 0 00.099-.008.556.556 0 00.23-.131c.108-.11.163-.23.163-.361v-.033a.492.492 0 00-.098-.287z"
                      fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
                      className="duration-500"
                    />
                  </svg>
                )}
                {/* Warning icon */}
              </div>
            </div>
          ))}
        </div>
      </div>
    </>
  );
}

// function TypeButtonColor(roles: roles, types: roles[], i: any) {
//   if (roles == types[i]) return "#1F1F1F";
//   return "#EAEAEA";
// }

function TypeIcon(roles: Role, types: Role[], i: number) {
  if (types[i] == "USER")
    return (
      <svg
        width="30"
        height="25"
        viewBox="0 0 30 25"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M29.207 12.2032L28.0322 15.729M28.0322 15.729L26.3863 20.6652H20.0397L18.6294 15.729H28.0322ZM21.4501 23.5L21.5 23.5M25.6811 23.5L25.6952 23.4845"
          stroke={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M16.9792 14.3983C15.5232 13.2521 13.774 12.5388 11.9316 12.34C10.0892 12.1411 8.22813 12.4649 6.5611 13.2741C4.89408 14.0833 3.48847 15.3454 2.50503 16.916C1.52159 18.4865 1.00003 21.0104 1 22.8634H16.9792"
          stroke={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M15.0206 10.6304C13.9626 11.6884 12.5277 12.2827 11.0315 12.2827C9.53532 12.2827 8.10042 11.6884 7.04246 10.6304C5.98449 9.57246 5.39014 8.13756 5.39014 6.64137C5.39014 5.14519 5.98449 3.71028 7.04246 2.65232C8.10042 1.59436 9.53532 1 11.0315 1C12.5277 1 13.9626 1.59436 15.0206 2.65232C16.0785 3.71028 16.6729 5.14519 16.6729 6.64137C16.6729 8.13756 16.0785 9.57246 15.0206 10.6304Z"
          stroke={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  else if (types[i] == "MERCHANT")
    return (
      <svg
        width="24"
        height="23"
        viewBox="0 0 24 23"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M4.455 0.525C4.59583 0.360352 4.77066 0.228166 4.96745 0.137537C5.16425 0.0469074 5.37834 -1.4251e-05 5.595 3.24673e-09H18.405C18.6217 -1.4251e-05 18.8358 0.0469074 19.0325 0.137537C19.2293 0.228166 19.4042 0.360352 19.545 0.525L23.4585 5.091C23.8079 5.49875 24 6.01802 24 6.555V6.9375C24.0001 7.67996 23.7682 8.4039 23.3367 9.00813C22.9053 9.61236 22.2958 10.0667 21.5935 10.3076C20.8912 10.5485 20.1312 10.564 19.4197 10.3519C18.7082 10.1398 18.0807 9.71066 17.625 9.1245C17.2922 9.55315 16.8657 9.89996 16.3783 10.1384C15.8908 10.3768 15.3552 10.5005 14.8125 10.5C14.2698 10.5006 13.7342 10.377 13.2467 10.1385C12.7592 9.90011 12.3327 9.55324 12 9.1245C11.6673 9.55324 11.2408 9.90011 10.7533 10.1385C10.2658 10.377 9.73019 10.5006 9.1875 10.5C8.64481 10.5006 8.10919 10.377 7.62168 10.1385C7.13416 9.90011 6.70771 9.55324 6.375 9.1245C5.91929 9.71066 5.29182 10.1398 4.58031 10.3519C3.86879 10.564 3.10877 10.5485 2.40649 10.3076C1.7042 10.0667 1.09473 9.61236 0.663273 9.00813C0.231813 8.4039 -8.18979e-05 7.67996 2.16968e-08 6.9375V6.555C1.89113e-05 6.01802 0.192085 5.49875 0.5415 5.091L4.4565 0.5235L4.455 0.525ZM7.125 6.9375C7.125 7.48451 7.3423 8.00911 7.72909 8.39591C8.11589 8.7827 8.64049 9 9.1875 9C9.73451 9 10.2591 8.7827 10.6459 8.39591C11.0327 8.00911 11.25 7.48451 11.25 6.9375C11.25 6.73859 11.329 6.54782 11.4697 6.40717C11.6103 6.26652 11.8011 6.1875 12 6.1875C12.1989 6.1875 12.3897 6.26652 12.5303 6.40717C12.671 6.54782 12.75 6.73859 12.75 6.9375C12.75 7.48451 12.9673 8.00911 13.3541 8.39591C13.7409 8.7827 14.2655 9 14.8125 9C15.3595 9 15.8841 8.7827 16.2709 8.39591C16.6577 8.00911 16.875 7.48451 16.875 6.9375C16.875 6.73859 16.954 6.54782 17.0947 6.40717C17.2353 6.26652 17.4261 6.1875 17.625 6.1875C17.8239 6.1875 18.0147 6.26652 18.1553 6.40717C18.296 6.54782 18.375 6.73859 18.375 6.9375C18.375 7.48451 18.5923 8.00911 18.9791 8.39591C19.3659 8.7827 19.8905 9 20.4375 9C20.9845 9 21.5091 8.7827 21.8959 8.39591C22.2827 8.00911 22.5 7.48451 22.5 6.9375V6.555C22.5 6.37624 22.4362 6.20336 22.32 6.0675L18.405 1.5H5.595L1.68 6.0675C1.56382 6.20336 1.49999 6.37624 1.5 6.555V6.9375C1.5 7.48451 1.7173 8.00911 2.10409 8.39591C2.49089 8.7827 3.01549 9 3.5625 9C4.10951 9 4.63411 8.7827 5.02091 8.39591C5.4077 8.00911 5.625 7.48451 5.625 6.9375C5.625 6.73859 5.70402 6.54782 5.84467 6.40717C5.98532 6.26652 6.17609 6.1875 6.375 6.1875C6.57391 6.1875 6.76468 6.26652 6.90533 6.40717C7.04598 6.54782 7.125 6.73859 7.125 6.9375ZM2.25 11.25C2.44891 11.25 2.63968 11.329 2.78033 11.4697C2.92098 11.6103 3 11.8011 3 12V21H4.5V13.5C4.5 13.1022 4.65804 12.7206 4.93934 12.4393C5.22064 12.158 5.60218 12 6 12H10.5C10.8978 12 11.2794 12.158 11.5607 12.4393C11.842 12.7206 12 13.1022 12 13.5V21H21V12C21 11.8011 21.079 11.6103 21.2197 11.4697C21.3603 11.329 21.5511 11.25 21.75 11.25C21.9489 11.25 22.1397 11.329 22.2803 11.4697C22.421 11.6103 22.5 11.8011 22.5 12V21H23.25C23.4489 21 23.6397 21.079 23.7803 21.2197C23.921 21.3603 24 21.5511 24 21.75C24 21.9489 23.921 22.1397 23.7803 22.2803C23.6397 22.421 23.4489 22.5 23.25 22.5H0.75C0.551088 22.5 0.360322 22.421 0.21967 22.2803C0.0790177 22.1397 2.16968e-08 21.9489 2.16968e-08 21.75C2.16968e-08 21.5511 0.0790177 21.3603 0.21967 21.2197C0.360322 21.079 0.551088 21 0.75 21H1.5V12C1.5 11.8011 1.57902 11.6103 1.71967 11.4697C1.86032 11.329 2.05109 11.25 2.25 11.25ZM6 21H10.5V13.5H6V21ZM13.5 13.5C13.5 13.1022 13.658 12.7206 13.9393 12.4393C14.2206 12.158 14.6022 12 15 12H18C18.3978 12 18.7794 12.158 19.0607 12.4393C19.342 12.7206 19.5 13.1022 19.5 13.5V18C19.5 18.3978 19.342 18.7794 19.0607 19.0607C18.7794 19.342 18.3978 19.5 18 19.5H15C14.6022 19.5 14.2206 19.342 13.9393 19.0607C13.658 18.7794 13.5 18.3978 13.5 18V13.5ZM18 13.5H15V18H18V13.5Z"
          fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
        />
      </svg>
    );
  else
    return (
      <svg
        width="33"
        height="23"
        viewBox="0 0 33 23"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M11.2175 18.511C11.1356 18.507 11.0448 18.503 10.9443 18.5006C10.3513 18.4821 9.55175 18.4821 8.4372 18.4821C7.32185 18.4821 6.5223 18.4821 5.93007 18.5006C5.82962 18.5038 5.73882 18.507 5.65686 18.511C5.75823 19.1758 6.09442 19.7822 6.6045 20.2204C7.11457 20.6586 7.76476 20.8995 8.4372 20.8995C9.10964 20.8995 9.75983 20.6586 10.2699 20.2204C10.78 19.7822 11.1162 19.1758 11.2175 18.511ZM8.4372 22.4999C9.01759 22.4999 9.5923 22.3856 10.1285 22.1635C10.6647 21.9414 11.1519 21.6159 11.5623 21.2055C11.9727 20.7951 12.2983 20.3078 12.5204 19.7716C12.7425 19.2354 12.8568 18.6607 12.8568 18.0803C12.8568 17.7235 12.8568 17.472 12.7419 17.2952C12.4695 16.875 11.5486 16.875 8.4372 16.875C4.01758 16.875 4.01758 16.875 4.01758 18.0803C4.01758 19.2525 4.48322 20.3766 5.31206 21.2055C6.14089 22.0343 7.26504 22.4999 8.4372 22.4999ZM21.8367 4.82144H25.7139V14.4643H24.1068V6.42858H23.1626L20.878 18.233L19.2998 17.9276L21.8367 4.82144ZM27.681 20.843C28.0439 20.7736 28.3894 20.6334 28.6981 20.4304C29.0067 20.2274 29.2723 19.9656 29.4798 19.66C29.6872 19.3544 29.8324 19.0108 29.9071 18.6491C29.9818 18.2873 29.9844 17.9144 29.915 17.5516L31.4932 17.2494C31.7135 18.4007 31.4675 19.5923 30.8093 20.5622C30.151 21.5321 29.1344 22.2008 27.9832 22.4212C26.8319 22.6415 25.6403 22.3955 24.6704 21.7373C23.7005 21.079 23.0318 20.0625 22.8114 18.9112L24.3896 18.6091C24.459 18.9719 24.5992 19.3175 24.8022 19.6261C25.0052 19.9347 25.2669 20.2004 25.5726 20.4078C25.8782 20.6152 26.2218 20.7604 26.5835 20.8351C26.9453 20.9098 27.3182 20.9125 27.681 20.843Z"
          fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M29.2263 15.1168C28.6968 14.7459 28.0776 14.5238 27.4332 14.4735C26.7887 14.4233 26.1426 14.5467 25.562 14.8309C24.9814 15.1151 24.4876 15.5497 24.1321 16.0896C23.7765 16.6294 23.5721 17.2547 23.5403 17.9003L30.4847 16.6757C30.2204 16.0479 29.7842 15.5075 29.2263 15.1168ZM26.2451 12.9351C27.4479 12.7231 28.6871 12.9393 29.747 13.5462C30.807 14.1531 31.6208 15.1123 32.0468 16.257C32.4132 17.239 31.6788 18.0972 30.8527 18.2418L23.7307 19.4986C22.9054 19.6433 21.9219 19.0888 21.9291 18.0409C21.938 16.8195 22.3746 15.6399 23.1631 14.707C23.9517 13.7742 25.0422 13.1472 26.2451 12.9351ZM13.6604 8.03572H6.42828C6.21516 8.03572 6.01077 8.12038 5.86007 8.27108C5.70937 8.42178 5.62471 8.62617 5.62471 8.83929V10.4464H14.464V8.83929C14.464 8.62617 14.3793 8.42178 14.2286 8.27108C14.0779 8.12038 13.8735 8.03572 13.6604 8.03572ZM6.42828 6.42859C5.78892 6.42859 5.17575 6.68257 4.72366 7.13467C4.27156 7.58676 4.01758 8.19993 4.01758 8.83929V11.25C4.01758 11.4631 4.10224 11.6675 4.25294 11.8182C4.40364 11.9689 4.60803 12.0536 4.82115 12.0536H15.2675C15.4806 12.0536 15.685 11.9689 15.8357 11.8182C15.9864 11.6675 16.0711 11.4631 16.0711 11.25V8.83929C16.0711 8.19993 15.8171 7.58676 15.365 7.13467C14.9129 6.68257 14.2997 6.42859 13.6604 6.42859H6.42828Z"
          fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M13.6606 12.0535H8.10478C4.91221 12.0535 2.35767 14.1709 1.74696 16.8749H13.5715C13.6032 16.8766 13.6346 16.8675 13.6606 16.8492V12.0535ZM8.10478 10.4464C3.62891 10.4464 0 13.884 0 18.1253C0 18.3221 0.168749 18.4821 0.377677 18.4821H13.5715C14.5084 18.4821 15.2678 17.7629 15.2678 16.8749V11.0892C15.2678 10.7341 14.964 10.4464 14.5896 10.4464H8.10478ZM24.9106 1.60714H23.3035C22.8772 1.60714 22.4684 1.77646 22.167 2.07785C21.8656 2.37925 21.6963 2.78803 21.6963 3.21427C21.6963 3.64051 21.8656 4.04929 22.167 4.35069C22.4684 4.65208 22.8772 4.82141 23.3035 4.82141H24.9106V1.60714ZM23.3035 0C22.451 0 21.6334 0.338645 21.0306 0.941438C20.4278 1.54423 20.0892 2.36179 20.0892 3.21427C20.0892 4.06675 20.4278 4.88431 21.0306 5.4871C21.6334 6.08989 22.451 6.42854 23.3035 6.42854H26.0235C26.2967 6.42854 26.5177 6.20676 26.5177 5.93435V0.494194C26.5177 0.363125 26.4657 0.237425 26.373 0.144746C26.2803 0.0520665 26.1546 0 26.0235 0H23.3035Z"
          fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
        />
        <path
          d="M17.1528 0.803619L21.1104 1.49951L20.8315 3.08254L16.8748 2.38665L17.1528 0.803619Z"
          fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M22.5 18.4822H12.8572V16.875H22.5V18.4822ZM20.8929 14.4643H13.6607V12.8572H20.8929V14.4643Z"
          fill={roles == types[i] ? "#1F1F1F" : "#EAEAEA"}
          className="duration-500"
        />
      </svg>
    );
}
